-- do while 반복문 사용하기

#include <stdio.h>

int main()
{
    int i = 0;

    do     // 처음 한 번은 아래 코드가 실행됨
    {
        printf("Hello, world! %d\n", i);    // Hello, world!와 i의 값을 함께 출력
        i++;                                // i를 1씩 증가시킴
    } while (i < 100);    // i가 100보다 작을 때 반복. 0부터 99까지 증가하면서 100번 반복

    return 0;
}

실행 결과
Hello, world! 0
Hello, world! 1
... (생략)
Hello, world! 97
Hello, world! 98
Hello, world! 99

#include <stdio.h>

int main()
{
    int i = 0;

    // do에 해당하는 부분
    printf("Hello, world! %d\n", i);    // 처음 한 번은 실행
    i++;                                // 처음 한 번은 실행

    while (i < 100)    // i가 100보다 작을 때 반복. 0부터 99까지 증가하면서 100번 반복
    {
        printf("Hello, world! %d\n", i);    // Hello, world!와 i의 값을 함께 출력
        i++;                                // i를 1씩 증가시킴
    }

    return 0;
}
실행 결과
Hello, world! 0
Hello, world! 1
... (생략)
Hello, world! 97
Hello, world! 98
Hello, world! 99



--입력한 횟수대로 반복하기
#define _CRT_SECURE_NO_WARNINGS    // scanf 보안 경고로 인한 컴파일 에러 방지
#include <stdio.h>

int main()
{
    int count;

    scanf("%d", &count);    // 값을 입력받음

    do    // 처음 한 번은 아래 코드가 실행됨
    {
        printf("Hello, world! %d\n", count);    // Hello, world!와 i의 값을 함께 출력
        count--;                                // count를 1씩 감소시킴
    } while (count > 0);                        // count가 0보다 클 때 반복

    return 0;
}


--반복 횟수가 정해지지 않은 경우

#include <stdio.h>
#include <stdlib.h>    // srand, rand 함수가 선언된 헤더 파일
#include <time.h>      // time 함수가 선언된 헤더 파일

int main()
{
    srand(time(NULL));    // 현재 시간값으로 시드 설정

    int i = 0;
    do
    {
        i = rand() % 10;    // rand 함수를 사용하여 무작위로 정수를 생성한 뒤 10 미만의 숫자로 만듦
        printf("%d\n", i);
    } while (i != 3);      // 3이 아닐 때 계속 반복

    return 0;
}
실행 결과
1
5
6
3

-- break로 반복문 끝내기
#include <stdio.h>

int main()
{
    int num1 = 0;

    while (1)   // 무한 루프
    {
        num1++;  // num1을 1씩 증가시킴

        printf("%d\n", num1);

        if (num1 == 100)    // num1이 100일 때
            break;          // 반복문을 끝냄. while의 제어흐름을 벗어남
    }

    return 0;
}
=>while에 1을 지정하여 무한 루프를 만들고 그 안에서 num1을 1씩 증가시키고 if를 이용하여 num1이 100이 될 때 break를 실행


--continue로 코드 실행 건너뛰기
#include <stdio.h>

int main()
{
    for (int i = 1; i <= 100; i++)    // 1부터 100까지 증가하면서 100번 반복
    {
        if (i % 2 != 0)               // i를 2로 나누었을 때 나머지가 0이 아니면 홀수
            continue;                 // 아래 코드를 실행하지 않고 건너뜀

        printf("%d\n", i);
    }

    return 0;
}
실행 결과
... (생략)
92
94
96
98
100


--while
#include <stdio.h>

int main()
{
    int i = 1;
    while (i <= 100)     // i가 100보다 작거나 같을 때 반복. 1부터 100까지 증가하면서 100번 반복
    {
        i++;             // i를 1씩 증가시킴
        if (i % 2 != 0)  // i를 2로 나누었을 때 나머지가 0이 아니면 홀수
            continue;    // 아래 코드를 실행하지 않고 건너뜀

        printf("%d\n", i);
    }

    return 0;
}
실행 결과
... (생략)
92
94
96
98
100


--입력한 횟수대로 반복하기
#define _CRT_SECURE_NO_WARNINGS    // scanf 보안 경고로 인한 컴파일 에러 방지
#include <stdio.h>

int main()
{
    int count;

    scanf("%d", &count);    // 값을 입력받음
    
    int i = 1;
    while (1)               // 무한 루프
    {
        printf("%d\n", i);

        if (i == count)     // i가 입력받은 값과 같을 때
            break;          // 반복문을 끝냄

        i++;
    }

    return 0;
}
실행 결과
5 (입력)
1
2
3
4
5


 --입력한 숫자까지 짝수 출력하기
#define _CRT_SECURE_NO_WARNINGS    // scanf 보안 경고로 인한 컴파일 에러 방지
#include <stdio.h>

int main()
{
    int count;

    scanf("%d", &count);    // 값을 입력받음

    for (int i = 1; i <= count; i++)    // 1부터 증가하면서 count보다 작거나 같을 때까지 반복
    {
        if (i % 2 != 0)                 // i를 2로 나누었을 때 나머지가 0이 아니면 홀수
            continue;                   // 아래 코드를 실행하지 않고 건너뜀

        printf("%d\n", i);
    }

    return 0;
}
실행 결과
10 (입력)
2
4
6
8
10



--사각형으로 별 출력하기
#include <stdio.h>

int main()
{
    for (int i = 0; i < 5; i++)    // 5번 반복. 바깥쪽 루프는 세로 방향
    {
        for (int j = 0; j < 5; j++)    // 5번 반복. 안쪽 루프는 가로 방향
        {
            printf("*");               // 별 출력
        }
        printf("\n");              // 가로 방향으로 별을 다 그린 뒤 다음 줄로 넘어감
    }

    return 0;
}
실행결과
*****
*****
*****
*****
*****
